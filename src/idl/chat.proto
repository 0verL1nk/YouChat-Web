
// chat.proto
syntax = "proto3";

package chat;
import "api.proto";

enum MessageType {
   TEXT = 0;
   IMAGE = 1;
   FILE = 2;
   SYSTEM = 3;
 }

// message ChatMsg{
//    int64 From=1[(api.body)="from"];
//    int64 To=2[(api.body)="to"];
//    MessageType Type=3[(api.body)="type"];
//    string Text=4[(api.body)="text"];
//    bytes FileContent=5[(api.body)="file_content"];
//    int64 TimeStamp=6[(api.body)="time_stamp"];
// }




message ChatMsgImage {
  string image_name = 1;   // 对应 TS 的 ImageName
  string url        = 2;
  string compressed = 3;   // base64 缩略图
}

message ChatMsgAudio {
  string audio_name = 1;
  string url        = 2;
  string length     = 3;   // "day:hour:minute:second"
}

message ChatMsgVideo {
  string video_name = 1;
  string url        = 2;
  string cover      = 3;   // base64 缩略图
  string length     = 4;
}

message ChatMsgFile {
  string url       = 1;
  string file_name = 2;
  enum FileType {
    PDF    = 0;
    WORD   = 1;
    EXE    = 2;
    TXT    = 3;
    OTHERS = 4;
  }
  FileType file_type = 3;
  string file_size  = 4;
}

enum msgType {
  TEXT  = 0;
  IMAGE = 1;
  AUDIO = 2;
  VIDEO = 3;
  FILE  = 4;
}
message ChatMsg {
   // 将 HTTP 请求的 body（或某个 JSON 字段）绑定到 from 字段
   string id =1 [(api.body) = "id"];
   string from      = 2 [(api.body) = "from"];
   string to        = 3 [(api.body) = "to"];
 
   msgType type        = 4 [(api.body) = "type"];
 
   // 2000 成功, 5000 失败
   int32 code       = 5 [(api.body) = "code"];
 
   // Unix 时间戳
   int64 created_at = 6 [(api.body) = "created_at"];
 
   // 多态 content，始终映射到同一个 JSON 键 “Content”
   oneof content {
     string            text  = 7 [(api.body) = "content"];
     ChatMsgImage      image = 8 [(api.body) = "content"];
     ChatMsgAudio      audio = 9 [(api.body) = "content"];
     ChatMsgVideo      video = 10 [(api.body) = "content"];
     ChatMsgFile       file  = 11[(api.body) = "content"];
   }
 }
// 获取某个聊天的聊天记录
message GetConversationReq{
   string GroupID=1[(api.body)="group_id"];
  //  unix时间戳
   int64 After=2[(api.body)="after"];
   int64 Page=3[(api.body)="page"];
   int64 PageSize=4[(api.body)="page_size"];
}

message GetConversationResponse{
  int64 Total=1[(api.body)="total"];
  int64 Page=2[(api.body)="page"];
  int64 PageSize=3[(api.body)="page_size"];
  // ChatMsg 的数组
  repeated ChatMsg Msgs=4[(api.body)="msgs"];
}

